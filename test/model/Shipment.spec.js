/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2020 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

/**
 * Shop API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 17.8
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import expect from 'expect.js'
import ShopApi from '../../src/index'

let instance

beforeEach(() => {
    instance = new ShopApi.Shipment()
})

const getProperty = (object, getter, property) => {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function') {
        return object[getter]()
    } else {
        return object[property]
    }
}

const setProperty = (object, setter, property, value) => {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function') {
        object[setter](value)
    } else {
        object[property] = value
    }
}

describe('ShipmentModel', () => {
    it('should create an instance of ShipmentModel', () => {
        // uncomment below and update the code to test ShipmentModel
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be.a(ShopApi.Shipment);
    })

    it('should have the property adjustedMerchandizeTotalTax (base name: "adjusted_merchandize_total_tax")', () => {
        // uncomment below and update the code to test the property adjustedMerchandizeTotalTax
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property adjustedShippingTotalTax (base name: "adjusted_shipping_total_tax")', () => {
        // uncomment below and update the code to test the property adjustedShippingTotalTax
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property cFromStoreId (base name: "c_fromStoreId")', () => {
        // uncomment below and update the code to test the property cFromStoreId
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property cShipmentType (base name: "c_shipmentType")', () => {
        // uncomment below and update the code to test the property cShipmentType
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property cStorePickupMessage (base name: "c_storePickupMessage")', () => {
        // uncomment below and update the code to test the property cStorePickupMessage
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property gift (base name: "gift")', () => {
        // uncomment below and update the code to test the property gift
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property giftMessage (base name: "gift_message")', () => {
        // uncomment below and update the code to test the property giftMessage
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property merchandizeTotalTax (base name: "merchandize_total_tax")', () => {
        // uncomment below and update the code to test the property merchandizeTotalTax
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property productSubTotal (base name: "product_sub_total")', () => {
        // uncomment below and update the code to test the property productSubTotal
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property productTotal (base name: "product_total")', () => {
        // uncomment below and update the code to test the property productTotal
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property shipmentId (base name: "shipment_id")', () => {
        // uncomment below and update the code to test the property shipmentId
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property shipmentNo (base name: "shipment_no")', () => {
        // uncomment below and update the code to test the property shipmentNo
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property shipmentTotal (base name: "shipment_total")', () => {
        // uncomment below and update the code to test the property shipmentTotal
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property shippingAddress (base name: "shipping_address")', () => {
        // uncomment below and update the code to test the property shippingAddress
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property shippingMethod (base name: "shipping_method")', () => {
        // uncomment below and update the code to test the property shippingMethod
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property shippingStatus (base name: "shipping_status")', () => {
        // uncomment below and update the code to test the property shippingStatus
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property shippingTotal (base name: "shipping_total")', () => {
        // uncomment below and update the code to test the property shippingTotal
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property shippingTotalTax (base name: "shipping_total_tax")', () => {
        // uncomment below and update the code to test the property shippingTotalTax
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property taxTotal (base name: "tax_total")', () => {
        // uncomment below and update the code to test the property taxTotal
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

    it('should have the property trackingNumber (base name: "tracking_number")', () => {
        // uncomment below and update the code to test the property trackingNumber
        // var instane = new ShopApi.Shipment()
        // expect(instance).to.be();
    })

})
